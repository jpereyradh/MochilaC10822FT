Ejercicio

1. Quien inventó el sistema de control de version Git y por que?

	Github fue desarrollado por Linus Torvalds, Chris Wanstrath, P. J. Hyett, Tom Preston-Werner y Scott Chacon
	usando Ruby on Rails, y empezó en 2008. Aunque la compañía, Github, Inc, existía desde 2007.

	Git, que presenta una arquitectura distribuida, es un ejemplo de DVCS (sistema de control de versiones 
	distribuido, por sus siglas en inglés). En lugar de tener un único espacio para todo el historial de 
	versiones del software, como sucede de manera habitual en los sistemas de control de versiones antaño 
	populares, como CVS o Subversion (también conocido como SVN), en Git, la copia de trabajo del código 
	de cada desarrollador es también un repositorio que puede albergar el historial completo de todos los cambios.

	Además de contar con una arquitectura distribuida, Git se ha diseñado teniendo en cuenta el rendimiento, 
	la seguridad y la flexibilidad.

2. A quien pertenece actualmente a Github y por que?
	
	El 4 de junio de 2018, Microsoft compró GitHub por la cantidad de 7500 millones de dólares.
	
	la compañía ha adoptado una estrategia nueva, mucho más abierta al mundo del software libre y a la integración 
	con otras plataformas y servicios. Un ejemplo es la adquisición en 2016 de Xamarin, una plataforma que permite 
	crear aplicaciones móviles que pueden funcionar en distintos sistemas, como iOS, Android y (por supuesto) 
	Windows. Y es, precisamente, el que fuera CEO de Xamarin, Nat Friedman, quien será nuevo CEO de GitHub. Así 
	pues, esta adquisición es, sin duda, un acercamiento a la comunidad más vibrante en el desarrollo de software 
	libre y abierto.

	Además, hay otro motivo de peso: Microsoft Azure. En plena explosión de cloud services (servicios en la nube), 
	con un crecimiento previsto para este año del 21.4%, Microsoft tiene que competir con el líder indiscutible a 
	día de hoy, la todopoderosa Amazon con AWS. Qué mejor forma de hacerlo que estar en contacto directo con los 
	desarrolladores que trabajan en esos servicios, ver sus necesidades y ofrecerles herramientas que faciliten su 
	integración con Azure.

3. Hay otra forma que no sea la terminal para trabajar con Github?
        GitKraken tiene una interfaz grafica, se centra en la velocidad y facil manejo. 
